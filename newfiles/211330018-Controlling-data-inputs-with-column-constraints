<!DOCTYPE html>
<html dir="ltr" lang="en-US">
<head>
  <!-- v8590 -->
  <title>Controlling data inputs with column constraints &ndash; AppSheet</title>

  <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="lxEeEIpqwYKYS+QwC0bA+t/RUMV+/u3QnYWILJ7S3eBKX8vA10i12SgIxMo+7vq5Fb1G2cuNAYGvU1JO+5bduQ==" />
  <meta name="description" content="Every column definition has a type (that specifies what values are allowed in the column) as well as flags that specify whether the..." /><meta property="og:image" content="http://p5.zdassets.com/hc/settings_assets/721994/200090887/dr70OtxKoy4CCMLcyk4PVw-AppSheetLogoBlack.png" />
<meta property="og:type" content="website" />
<meta property="og:site_name" content="AppSheet" />
<meta property="og:title" content="Controlling data inputs with column constraints" />
<meta property="og:description" content="Every column definition has a type (that specifies what values are allowed in the column) as well as flags that specify whether the column is hidden, whether it is required for input, etc. This is ..." />
<meta property="og:url" content="http://appsheethelp.zendesk.com/hc/en-us/articles/211330018-Controlling-data-inputs-with-column-constraints" />
<link href="https://appsheethelp.zendesk.com/hc/en-us/articles/211330018-Controlling-data-inputs-with-column-constraints" rel="canonical" />

  <!-- Entypo pictograms by Daniel Bruce — www.entypo.com -->
  <link rel="stylesheet" media="all" href="//p5.zdassets.com/hc/assets/application-698f4d28ca1dde44cbc0458b325c027e.css" id="stylesheet" />
  <link rel="stylesheet" type="text/css" href="//p5.zdassets.com/hc/themes/721994/202542847/style-7ad4ec7f404b46c0ce9fe578779c3f38.css?brand_id=234708&amp;locale=en-us"></link>
  <link rel="shortcut icon" href="//p5.zdassets.com/hc/settings_assets/721994/200090887/yVUINytx5eb9jn2wFRqTKw-32b.png"></link>

  <!--[if lt IE 9]>
  <script>
    //Enable HTML5 elements for <IE9
    'abbr article aside audio bdi canvas data datalist details dialog \
    figcaption figure footer header hgroup main mark meter nav output \
    progress section summary template time video'.replace(/\w+/g,function(n){document.createElement(n)});
  </script>
<![endif]-->

  <script src="//p5.zdassets.com/hc/assets/jquery-db6a1152372bc8d68f95eeedb717f327.js"></script>
  <script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
 m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
 })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-30866803-7', 'auto');
ga('send', 'pageview');

</script>

  

  <!-- add code here that should appear in the document head -->

  <script type="text/javascript" src="//p5.zdassets.com/hc/themes/721994/202542847/script-7ad4ec7f404b46c0ce9fe578779c3f38.js?brand_id=234708&amp;locale=en-us"></script>
</head>
<body class="">
  


  


  <header class="header">
  <div class="header-inner">
    <div class="logo">
      <a title="Home" href="/hc/en-us">
        <img src="//p5.zdassets.com/hc/settings_assets/721994/200090887/dr70OtxKoy4CCMLcyk4PVw-AppSheetLogoBlack.png" alt="Logo">
      </a>
    </div>
    <nav class="user-nav">
      
      <a class="submit-a-request" href="/hc/en-us/requests/new">Submit a request</a>
        <a class="login" data-auth-action="signin" role="button" href="/hc/en-us/signin?return_to=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints&amp;locale=1">Sign in</a>

    </nav>
  </div>
</header>


  <main role="main">
    <nav class="sub-nav">
  <ol class="breadcrumbs">
  
    <li title="AppSheet">
      
        <a href="/hc/en-us">AppSheet</a>
      
    </li>
  
    <li title="App Definition: Data">
      
        <a href="/hc/en-us/categories/200290698-App-Definition-Data">App Definition: Data</a>
      
    </li>
  
    <li title="Data definition in the app editor">
      
        <a href="/hc/en-us/sections/200826837-Data-definition-in-the-app-editor">Data definition in the app editor</a>
      
    </li>
  
</ol>

  <form role="search" class="search" data-search="" action="/hc/en-us/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" /><input type="search" name="query" id="query" placeholder="Search" />
<input type="submit" name="commit" value="Search" /></form>
</nav>

<article class="main-column">

  <header class="article-header">
    <h1>
      
      Controlling data inputs with column constraints
    </h1>
    <div class="article-info">
      <div class="article-avatar">
        <img src="https://secure.gravatar.com/avatar/0451feb25f80fbc92bc1636e06477078?default=https%3A%2F%2Fassets.zendesk.com%2Fhc%2Fassets%2Fuser_avatar.png&amp;r=g" alt="Avatar"/>
      </div>
      <div class="article-meta">
        <strong class="article-author" title="Julia Guthrie">
          
            Julia Guthrie
          
        </strong>
        <div class="article-updated meta"><time datetime="2016-03-04T18:28:11Z" title="2016-03-04T18:28:11Z" data-datetime="calendar">March 04, 2016 18:28</time></div>
      </div>
      <div></div>
    </div>
  </header>

  <div class="content-body article-body">
    <p>Every column definition has a type (that specifies what values are allowed in the column) as well as flags that specify whether the column is hidden, whether it is required for input, etc. This is adequate for many apps, but sometimes a more dynamic or data-driven mechanism is needed. This is what Column Constraints provide-- a column constraint is an <a href="/hc/en-us/articles/211326838-Expressions">expression</a> that is dynamically computed to determine the behavior of a specific column in an input form.</p>
<p>Four different column constraints can be defined for each column:</p>
<ul>
<li>Show_If</li>
<li>Valid_If</li>
<li>Required_If</li>
<li>Editable_If</li>
</ul>
<p>To add a column constraint, use the Column Structure tab of the Data pane in the <a style="background-color: #ffffff;" href="/hc/en-us/articles/206559378-Advanced-app-customizations" target="_blank">Advanced Editor</a> and click the "Edit" icon at the left of the corresponding column definition.  </p>
<p> </p>
<p><strong><span class="wysiwyg-font-size-large">Expression components</span></strong></p>
<p>These expression components utilize the following formatting:</p>
<ul>
<li>Name any column using square brackets around the exact column name: <strong>[ColumnName]</strong>. When combining a [ColumnName] with another value, put the expression in (parentheses).</li>
</ul>
<ul>
<li>Use <strong>[_THIS]</strong> as a "virtual column name." It refers to the value of the current column (used in Valid_If, Show_If, Required_If conditions).</li>
</ul>
<ul>
<li>Use <strong>[_THISROW]</strong> as a "virtual reference column." It refers to the current row. For example, use [_THISROW].[ColumnName].</li>
</ul>
<ul>
<li>Highlight all values with "quotes," except for numeric values: <strong>"Value"</strong>.</li>
</ul>
<ul>
<li>Numeric values are noted just as they are, e.g <strong>10</strong>.</li>
</ul>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Show_If</strong></span></p>
<p><span class="wysiwyg-font-size-medium">A Show_If column constraint is used when an input field should be shown or hidden depending on the values of one or more earlier field values in the form.</span></p>
<p>A Show_If constraint is a condition expression that determines whether or not an input for this column should be shown in a form. This is usually based on the values of other columns. For example, the condition expression <em><strong>[UserRating] = "5"</strong> </em>will display this column if the value in the "UserRating" column is "5". The condition expression <em><strong>[Status] = "Green" </strong></em>will display this column if the value in the "Status" column is "Green"<em><strong>.</strong></em></p>
<p>The special column name "_THIS" is used to refer to the current column being constrained. For example, a Show_If condition of <em><strong>ISBLANK([_THIS])</strong></em> can be used to show an input field only if the column itself is blank. The column will be hidden, once a data value has been entered and saved for the column. </p>
<p>Show_If conditions can also be defined on Page Header columns to <a href="/hc/en-us/articles/206435467" target="_blank">conditionally show or hide entire pages</a>.</p>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Valid_If</strong></span></p>
<p>Every input in a form is checked for validity based on its type. For example, a column of Number type will not accept "Hello" as an input. A Valid_If column constraint is used in situations where the validity of the input requires richer data-dependent logic.</p>
<p>A Valid_If constraint is a condition expression that determines whether or not the form input for this column is valid. For example, the <a href="https://www.appsheet.com/template/AppDef?appName=RateCalculator-71626">Quote Calculator sample</a> utilizes a Valid_If condition to ensure that the Cost Per Hour must be less than $20.</p>
<p>Here are examples of commonly used Valid_If constraints:</p>
<ol>
<li>Does the value of the column satisfy a simple condition?
<ul>
<li>For example, comparing the value with a constant: <strong><span class="wysiwyg-font-size-medium"><em>[_THIS] &gt; 5</em></span></strong></li>
<li>For example, comparing the value with another column: <em><strong>[_THIS] &gt; [ColumnA]</strong></em></li>
</ul>
</li>
<li>Is the value of the column in a list?
<ul>
<li>A list of constant values. For example: <strong><em>{100, 200, 300}</em></strong></li>
<li>A list of values from a column in another table. For example: <em><strong>LookupTable[ColumnC] </strong>. </em>This is particularly useful if the list of allowed values should itself be allowed to change while the app is being used.</li>
<li>A list of values from specific rows in another table. For example: <em><strong>SELECT(LookupTable[ColumnC], [ReportDate] &gt; Today() - 7) </strong></em>specifies that the rows in LookupTable should be filtered to find those where ReportDate is within the last week, and the corresponding values in ColumnC of LookupTable become the allowed list of valid values.</li>
</ul>
</li>
</ol>
<p>Whenever a list of allowed values is provided, it is actually a syntactic shortform for an expression that uses the IN function. For example, <strong><em>{100, 200, 300} </em></strong>is the same as <em><strong>IN([_THIS], {100, 200, 300})</strong>. </em>In input forms in the mobile app, columns with such Valid_If constraints are provided with dropdowns or enumeration selectors that reflect the list of choices.</p>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Valid_If and Dependent Dropdowns</strong></span></p>
<p>Dependent dropdowns are a common design pattern in apps that capture input. For example, consider an app like <a href="https://www.appsheet.com/samples/An-app-to-add-and-update-sales-leads?appGuidString=2f43eb0a-1dbf-417f-9e2d-ccb8b9600d02">this Lead Tracker sample</a> that asks for the 'Lead Region' (America, Asia, Europe) and then for a 'Country' within that region. This is actually requires relatively complex logic, but AppSheet tries to make it simple. Dependent dropdowns are driven by a separate lookup table.</p>
<p>In the sample, there is a separate 'Regions' lookup table with two columns: 'Region' and 'Country'. This acts as the lookup table for allowed combinations of regions and countries. <a href="https://www.appsheet.com/template/showtable?allowExternalRedirect=false&amp;appName=DependentDropdowns-16350&amp;tableName=Regions">Here is the table data</a> used in the sample.</p>
<p>The 'Lead Region' column has a regular Valid_If constraint: <strong><em>Regions[Region]</em></strong>. Therefore, when a new entry is being added, the input for this column shows three choices: America, Asia, and Europe.</p>
<p>Likewise, the 'Country' column also specifies a similar Valid_If constraint: <strong><em>Regions[Country]</em></strong>. However, because it follows the 'Lead Region' column and because both specify columns from the same lookup table 'Regions', AppSheet recognizes the intent and implements a dependent dropdown. </p>
<p>Internally, AppSheet creates an expression to capture the allowed set of values for the 'Country' column. The expression must say (in English!):</p>
<ul>
<li>Look at the Regions table</li>
<li>Filter the rows to make sure that the Region column of the table matches the value in the 'Lead Region' column of the row being edited in the form</li>
<li>Now extract the 'Country' column from those filtered rows</li>
<li>Eliminate any duplicates --- these are the allowed countries!</li>
<li>Recompute this list each time the 'Lead Region' is changed</li>
</ul>
<p>Strictly for an expression afficionado, here is the full underlying AppSheet expression: <em><strong>IN( [_THIS], SELECT(Regions[Country], [_THISROW].[Lead Region] = [Region]))</strong></em></p>
<p>While most app creators will never need to express something this complicated, you could infact provide this expression as a Valid_If constraint. It is useful to know for advanced use cases. For example, instead of using an equality condition, an app creator could use inequality or richer expressions to build very expressive dynamic dropdowns.</p>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Required_If </strong></span></p>
<p>A 'required' input is one that must be filled in before the record can be saved. A Required_If column constraint is used when a field is 'required' depending on the values of earlier form inputs.</p>
<p>A Required_If constraint is a condition expression that indicates whether a specific column is 'required' in an input form. It is usually based on the values of other columns (e.g. <em><strong>[Country Of Birth] = "USA"</strong></em>).</p>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Editable_If </strong></span></p>
<p>When an input column is 'editable' it can be modified by the user. The Editable_If column constraint is useful to lock down a certain column (prevent user edits) depending on the value already in the column or on the values of other columns.</p>
<p>An Editable_If constraint is a condition expression that indicates whether a specific column is 'editable' in an input form (e.g. <em><strong>ISBLANK([_THIS]</strong></em>) allows edits if the current value is blank, but once there is a value, it cannot be edited). Another common use case is to give certain users the ability to edit a field but make it readonly for others (eg: <em><strong>USEREMAIL() = "manager@acme.com"</strong></em>)</p>
<p> </p>
<p><span class="wysiwyg-font-size-large"><strong>Best practices</strong></span></p>
<p>Column constraints give you the power to define very subtle or complex conditions, but end-users will only see the resulting behavior. As an app creator, it is important to provide adequate explanations for the columns affected by these expressions--particularly for Valid_If conditions, so that users will know how to proceed if they provide an invalid column value. The best way to do so is by providing meaningful column descriptions.</p>
<p>When these expressions reference other fields in the row (not just [_THIS]), it is best to ensure that they are always "backward" references to fields that the end-user has already seen (meaning columns that come <em>before</em> the column being considered in the spreadsheet and appear <em>above</em> the column being considered in the Column Structure tab). Conditions containing "forward" references may be confusing to end-users and may cause problems with multi-page forms.</p>
  </div>

  <div class="article-attachments">
    <ul class="attachments">
      
    </ul>
  </div>

  <footer class="article-footer">
    
      <div class="article-vote">
        <span class="article-vote-question">Was this article helpful?</span>
        <div class="article-vote-controls">
          <a role="button" rel="nofollow" class="article-vote-up" title="Yes" aria-selected="false" href="/hc/en-us/signin?return_to=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints"></a>
          <a role="button" rel="nofollow" class="article-vote-down" title="No" aria-selected="false" href="/hc/en-us/signin?return_to=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints"></a>
        </div>
        <small class="article-vote-count">
          <span class="article-vote-label">0 out of 0 found this helpful</span>
        </small>
      </div>
    
    <ul class="share">
  <li><a href="http://www.facebook.com/share.php?title=Controlling+data+inputs+with+column+constraints&u=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints" class="share-facebook">Facebook</a></li>
  <li><a href="https://twitter.com/share?lang=en&text=Controlling+data+inputs+with+column+constraints&url=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints" class="share-twitter">Twitter</a></li>
  <li><a href="http://www.linkedin.com/shareArticle?mini=true&source=AppSheet&title=Controlling+data+inputs+with+column+constraints&url=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints" class="share-linkedin">LinkedIn</a></li>
  <li><a href="https://plus.google.com/share?hl=en-us&url=https%3A%2F%2Fappsheethelp.zendesk.com%2Fhc%2Fen-us%2Farticles%2F211330018-Controlling-data-inputs-with-column-constraints" class="share-googleplus">Google+</a></li>
</ul>

  </footer>

  <div class="article-more-questions">
    Have more questions? <a href="/hc/en-us/requests/new">Submit a request</a>
  </div>

  <section class="article-comments">
    <div class="comment-list-header">
      <h4>0 Comments</h4>
      <div class="comment-sorter">
      
      </div>
    </div>
    

    

    <div>Article is closed for comments.</div>

    
  </section>

</article>

<aside class="article-sidebar side-column">
  <div data-recent-articles></div>
  
  <section class="related-articles">
    <h3>Related articles</h3>
    <ul>
      
        <li>
          <a href="/hc/en-us/articles/211326838-Expressions">Expressions</a>
        </li>
      
        <li>
          <a href="/hc/en-us/articles/206435467-Multi-page-forms-with-conditional-branching">Multi-page forms with conditional branching</a>
        </li>
      
        <li>
          <a href="/hc/en-us/articles/205973178-App-formulas">App formulas</a>
        </li>
      
        <li>
          <a href="/hc/en-us/articles/205113938-Defining-and-using-slices">Defining and using slices</a>
        </li>
      
        <li>
          <a href="/hc/en-us/articles/205856187-Column-types">Column types</a>
        </li>
      
    </ul>
  </section>


</aside>

  </main>

  <footer class="footer">
  <div class="footer-inner">
    <!-- Footer content -->
  </div>
</footer>



  <!-- / -->
  

  <script type="text/javascript" src="//p5.zdassets.com/hc/en-us/locales-d6c3f67549071891c997acfdddfc1dc37f8e8b03.js"></script>
  <script src="https://appsheethelp.zendesk.com/auth/v2/host.js" data-brand-id="234708" data-return-to="https://appsheethelp.zendesk.com/hc/en-us/articles/211330018-Controlling-data-inputs-with-column-constraints" data-theme="hc" data-locale="1" data-auth-origin="234708,false,true"></script>
  

  <script type="text/javascript">
  /*

    Greetings sourcecode lurker!

    This is for internal Zendesk and legacy usage,
    we don't support or guarantee any of these values
    so please don't build stuff on top of them.

  */

  HelpCenter = {};
  HelpCenter.account = {"subdomain":"appsheethelp","environment":"production","name":"AppSheet"};
  HelpCenter.user = {"identifier":"da39a3ee5e6b4b0d3255bfef95601890afd80709","email":null,"name":null,"role":"anonymous","avatar_url":"https://assets.zendesk.com/hc/assets/user_avatar.png","organizations":[],"groups":[]};
  HelpCenter.internal = {"current_session":{"locale":"en-us","csrf_token":"aT2z2fZo9bjvAHq8Pt0uLK4CMSdN4Sq1F/2mzo4gJd60c2YJq0qB419DWkYLdRRvZG4nO/iSxuQlK3ys62Qlhw==","shared_csrf_token":null},"settings":{"zopim_enabled":false,"spam_filter_enabled":true},"current_record_id":"211330018","current_record_url":"/hc/en-us/articles/211330018-Controlling-data-inputs-with-column-constraints","current_record_title":"Controlling data inputs with column constraints","search_results_count":null,"current_text_direction":"ltr","current_brand_url":"https://appsheethelp.zendesk.com","current_path":"/hc/en-us/articles/211330018-Controlling-data-inputs-with-column-constraints","show_new_community_ipm_for_custom_theme":false,"authentication_domain":"https://appsheethelp.zendesk.com"};
</script>

  
  <script src="//p5.zdassets.com/hc/assets/vendor_enduser-41252f1504ab9f0f5d92b12d3a5556ba.js"></script>
  <script src="//p5.zdassets.com/hc/assets/hc_enduser-3ff46f64cdbf37878a0083bb9f9311c2.js"></script>
  

  <script type="text/javascript">
    (function() {
  var Tracker = {};

  Tracker.track = function(eventName, data) {
    var url = "https://appsheethelp.zendesk.com/hc/tracking/events?locale=en-us";

    var payload = {
      "event": eventName,
      "data": data,
      "referrer": document.referrer
    };

    var xhr = new XMLHttpRequest();

    xhr.open("POST", url, true);
    xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
    xhr.send(JSON.stringify(payload));
  };

    Tracker.track("article_viewed", "BAh7BzoLbG9jYWxlSSIKZW4tdXMGOgZFVDoPYXJ0aWNsZV9pZGkE4qOYDA==--e3322390075187df1892bff648d24d030d398e30");
})();

  </script>
</body>
</html>